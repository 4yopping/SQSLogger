{"name":"Sqslogger","tagline":"A simple Logger using AWS SQS Service","body":"# SQSLogger\r\n\r\nA simple Logger using AWS SQS Service\r\n\r\n[![Join the chat at https://gitter.im/4yopping/SQSLogger](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/4yopping/SQSLogger?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![npm version](https://badge.fury.io/js/sqs-logger.svg)](http://badge.fury.io/js/sqs-logger)\r\n[![Build Status](https://travis-ci.org/4yopping/SQSLogger.svg)](https://travis-ci.org/4yopping/SQSLogger)\r\n[![Inline docs](http://inch-ci.org/github/4yopping/SQSLogger.svg?branch=master)](http://inch-ci.org/github/4yopping/SQSLogger)\r\n##Instalation\r\n\r\n````\r\nnpm install sqs-logger --save\r\n\r\n````\r\n\r\n##Test\r\n\r\n````\r\nnpm test\r\n````\r\n\r\n## Usage\r\n\r\n### Setting AWS Credentials\r\n\r\nYou can use the same authentication methods of [AWS NodeJS SDK](http://docs.aws.amazon.com/AWSJavaScriptSDK/guide/node-configuring.html)\r\n\r\nI certainly recommend to use Credentials from Environment Variables for QA and Staging enviroments and the SDK profiles for local development. \r\n\r\nThe environment credentials are __AWS_ACCESS_KEY_ID__ and __process.env.AWS_SECRET_ACCESS_KEY__\r\n\r\nFurthermore, you can load a config file using the config loadFromPath function for Production environments:\r\n\r\n`````\r\nAWS.config.loadFromPath('./config.json')\r\n````\r\n\r\nEven though, if you want to hardcode your credentials (Not recommended at all) you can set them using the config update function:\r\n\r\n````AWS.config.update({accessKeyId: 'akid', secretAccessKey: 'secret'});````\r\n\r\nCreate the SQSLogger instance\r\n````\r\nvar SQSLogger = require('SQSLogger');\r\n````\r\n\r\nPut your Queue URL in the QueueUrl option and pass it to the constructor\r\n````\r\nvar logger = new SQSLogger({QueueUrl: 'https://sqs.us-east-1.amazonaws.com/00000000000/test'});\r\n````\r\n\r\n### Events\r\n\r\nUse the **sent** event to receive a response when the log was queued\r\n````\r\nlogger.on('sent',function(data){\r\n  dataIsTheAWSResponse(data);  \r\n});\r\n\r\n````\r\nUse the **error** event if you want to catch AWS errors\r\n````\r\nlogger.on('error',function(err){\r\n  console.error(err);\r\n});\r\n````\r\n\r\n### Send messages\r\n\r\nSend a **message**\r\n````\r\nlogger.sendMessage('Amazing Message');\r\n````\r\n\r\n### Callback\r\n\r\nYou can use a **callback** too\r\n````\r\nlogger.sendMessage('Mocha Test',function callback(data){\r\n  dataIsTheAWSResponse(data);\r\n});\r\n````\r\n\r\n\r\n##Contributing\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\r\nAdd unit tests for any new or changed functionality. Lint and test your code.\r\n\r\n\r\n##Licence\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Andrés González Aragón, 4yopping and all the related trademarks\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}